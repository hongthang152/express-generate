{"code":"#!/usr/bin/env node\n!function(r){var e={};function n(o){if(e[o])return e[o].exports;var t=e[o]={i:o,l:!1,exports:{}};return r[o].call(t.exports,t,t.exports,n),t.l=!0,t.exports}n.m=r,n.c=e,n.d=function(r,e,o){n.o(r,e)||Object.defineProperty(r,e,{enumerable:!0,get:o})},n.r=function(r){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(r,\"__esModule\",{value:!0})},n.t=function(r,e){if(1&e&&(r=n(r)),8&e)return r;if(4&e&&\"object\"==typeof r&&r&&r.__esModule)return r;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:r}),2&e&&\"string\"!=typeof r)for(var t in r)n.d(o,t,function(e){return r[e]}.bind(null,t));return o},n.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(e,\"a\",e),e},n.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},n.p=\"\",n(n.s=0)}([function(r,e){r.exports=\"\\r\\n// var program = require('commander'),\\r\\n// shell = require('shelljs'),\\r\\n// fs = require('fs');\\r\\n\\r\\nimport exampleController from '!raw-loader!./lib/exampleController.js';\\r\\n\\r\\nconsole.log(\\\"Hello\\\");\\r\\n\\r\\n// program\\r\\n//     .command('new <name>')\\r\\n//     .action((name) => {\\r\\n//         console.log(\\\"Checking for package.json .... \\\");\\r\\n//         shell.exec('npm init -y');\\r\\n//         shell.exec('npm install express-generator -g --save');\\r\\n//         shell.exec('express --force --view=ejs ' + name);\\r\\n//         shell.cd(name);\\r\\n//         shell.exec('npm install');\\r\\n//     });\\r\\n\\r\\n// program\\r\\n//     .command('generate [tool] <toolName>')\\r\\n//     .action((tool, toolName) => {\\r\\n//         switch(tool) {\\r\\n//             case 'controllers':\\r\\n//                 shell.mkdir('controllers');\\r\\n//                 shell.cd('controllers');\\r\\n//                 let fileName = toolName + '.js';\\r\\n//                 console.log(\\\"Controller Name: \\\" + toolName);\\r\\n//                 shell.touch(fileName);\\r\\n//                 console.log(\\\"Successfully generate controller with name\\\" + fileName);\\r\\n\\r\\n//                 fs.readFile('./lib/exampleController.js', (err, data) => {\\r\\n//                     if(err) {\\r\\n//                         throw err;\\r\\n//                     }\\r\\n//                     let exampleContent = data.toString();\\r\\n//                     fs.writeFile('')\\r\\n//                 })\\r\\n//         }\\r\\n//     });\\r\\n    \\r\\n\\r\\n// program.parse(process.argv);\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// var content;\\r\\n// // First I want to read the file\\r\\n// fs.readFile('src/lib/test.txt', function read(err, data) {\\r\\n//     if (err) {\\r\\n//         throw err;\\r\\n//     }\\r\\n//     content = data.toString();\\r\\n//     console.log(content);   // Put all of the code here (not the best solution)\\r\\n\\r\\n//     // Invoke the next step here however you like\\r\\n//     fs.writeFile('src/lib/test.txt', content + `\\\\r\\\\nconsole.log('This is a test')`, function(err) {\\r\\n//         if(err) {\\r\\n//             return console.log(err);\\r\\n//         }\\r\\n//         console.log(\\\"The file was saved!\\\");\\r\\n//     })\\r\\n// });\\r\\n\\r\\n\\r\\n\"}]);","extractedComments":[]}