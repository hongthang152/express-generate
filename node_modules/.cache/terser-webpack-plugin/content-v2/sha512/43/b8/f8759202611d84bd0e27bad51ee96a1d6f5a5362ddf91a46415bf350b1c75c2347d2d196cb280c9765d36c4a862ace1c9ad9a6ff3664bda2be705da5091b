{"code":"#!/usr/bin/env node\n!function(e){var r={};function n(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=r,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)n.d(t,o,function(r){return e[r]}.bind(null,o));return t},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,\"a\",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p=\"\",n(n.s=9)}([function(e,r){e.exports='exports.{{!--actionName--!}} = (req, res, next) => {\\r\\n    res.send(\"You have just reached action: {{!--actionName--!}}\");\\r\\n}'},function(e,r){e.exports=\"exports.getIndex = (req, res, next) => {\\r\\n    res.render('index', { title: 'Express' });\\r\\n}\"},function(e,r){e.exports=\"var viewConfig = require('./config/view');\\r\\nvar errorConfig = require('./config/error');\\r\\nvar utilitiesConfig = require('./config/utilities');\\r\\nvar routesConfig = require('./config/routes');\\r\\n\\r\\nvar express = require('express');\\r\\n\\r\\nvar app = express();\\r\\n\\r\\nviewConfig(app);\\r\\nutilitiesConfig(app);\\r\\nroutesConfig(app);\\r\\nerrorConfig(app);\\r\\n\\r\\nmodule.exports = app;\\r\\n\"},function(e,r){e.exports=\"var createError = require('http-errors');\\r\\n\\r\\nmodule.exports = (app) => {\\r\\n    app.use(function (req, res, next) {\\r\\n        next(createError(404));\\r\\n    });\\r\\n    \\r\\n    // error handler\\r\\n    app.use(function (err, req, res, next) {\\r\\n        // set locals, only providing error in development\\r\\n        res.locals.message = err.message;\\r\\n        res.locals.error = req.app.get('env') === 'development' ? err : {};\\r\\n    \\r\\n        // render the error page\\r\\n        res.status(err.status || 500);\\r\\n        res.render('error');\\r\\n    });\\r\\n};\"},function(e,r){e.exports=\"var indexRouter = require('../routes/index');\\r\\n\\r\\nmodule.exports = (app) => {\\r\\n    app.use('/', indexRouter);\\r\\n    // !-- Do not remove this line --! //\\r\\n};\"},function(e,r){e.exports=\"var logger = require('morgan');\\r\\nvar express = require('express');\\r\\nvar path = require('path');\\r\\nvar cookieParser = require('cookie-parser');\\r\\n\\r\\nmodule.exports = (app) => {\\r\\n    app.use(logger('dev'));\\r\\n    app.use(express.json());\\r\\n    app.use(express.urlencoded({ extended: false }));\\r\\n    app.use(cookieParser());\\r\\n    app.use(express.static(path.join(__dirname,'..','public')));\\r\\n};\"},function(e,r){e.exports=\"var path = require('path');\\r\\n\\r\\nmodule.exports = (app) => {\\r\\n    app.set('views', path.join(__dirname,'..', 'views'));\\r\\n    app.set('view engine', 'ejs');\\r\\n};\"},function(e,r){e.exports=\"var express = require('express');\\r\\nvar router = express.Router();\\r\\nvar indexController = require('../controllers/index.js');\\r\\n/* GET home page. */\\r\\nrouter.get('/', indexController.getIndex);\\r\\n\\r\\nmodule.exports = router;\\r\\n\"},function(e,r){e.exports=\"var express = require('express');\\r\\nvar router = express.Router();\\r\\nvar {{!--routeName--!}}Controller = require('../controllers/{{!--routeName--!}}.js');\\r\\n\\r\\n// !-- Do not remove this line --! //\\r\\n\\r\\nmodule.exports = router;\\r\\n\"},function(e,r,n){\"use strict\";n.r(r);var t=n(1),o=n.n(t),i=n(2),s=n.n(i),a=n(3),u=n.n(a),l=n(4),c=n.n(l),p=n(5),d=n.n(p),f=n(6),x=n.n(f),g=n(7),m=n.n(g),v=n(0),j=n.n(v),h=n(8),q=n.n(h),w=n(10),y=n(11),S=n(12);const F=\"controllers\",C=\"config\",b=\"routes\";y.config.silent=!0,w.command(\"new <name>\").action(e=>{console.log(\"Checking for package.json .... \"),y.exec(\"npm init -y\"),y.exec(\"npm install express-generator -g --save\"),y.exec(\"express --force --view=ejs \"+e),y.cd(e),y.exec(\"npm install\"),S.writeFile(\"./app.js\",s.a,e=>{y.echo(e)}),y.mkdir(C),y.cd(C),y.touch(\"error.js\"),y.touch(\"routes.js\"),y.touch(\"utilities.js\"),y.touch(\"view.js\"),S.writeFile(\"./error.js\",u.a),S.writeFile(\"./routes.js\",c.a),S.writeFile(\"./utilities.js\",d.a),S.writeFile(\"./view.js\",x.a),y.cd(\"..\"),y.mkdir(F),y.cd(F),y.touch(\"index.js\"),S.writeFile(\"./index.js\",o.a),y.cd(\"../routes\"),y.rm(\"users.js\"),S.writeFile(\"./index.js\",m.a)}),w.command(\"generate [tool] <toolName> [toolActions...]\").action((e,r,n)=>{switch(e){case\"controller\":if(function(e){let r=e+\".js\";if(y.cd(F),y.test(\"-e\",r))return!0;y.cd(\"..\"),y.cd(C);let n=S.readFileSync(\"routes.js\").toString(),t=new RegExp(\"app.use('/\"+e+\"')\");if(n.match(t))return!0;if(y.cd(\"..\"),y.cd(b),y.test(\"-e\",r))return!0;return y.cd(\"..\"),!1}(r))return void console.error(\"Error: Controller \"+r+\" already exists.\");!function(e,r,n){y.test(\"-e\",F)||y.mkdir(\"controllers\");y.cd(F);let t=r+\".js\";if(y.test(\"-e\",t))return!0;console.log(\"Controller Name: \"+r),y.rm(t),y.touch(t),console.log(\"Successfully generate controller with name: \"+t);let o=j.a.replace(/{{!--actionName--!}}/g,\"getIndex\")+\"\\n\\n\",i=S.readFileSync(t);S.writeFileSync(t,i.toString()+o),n.forEach(e=>{let r=j.a.replace(/{{!--actionName--!}}/g,e)+\"\\n\\n\",n=S.readFileSync(t);S.writeFileSync(t,n.toString()+r)})}(0,r,n),function(e,r,n){let t=r+\".js\";y.cd(\"..\"),y.cd(\"routes\"),y.touch(t),S.writeFileSync(t,q.a.replace(/{{!--routeName--!}}/g,r));let o=S.readFileSync(t).toString();o=o.replace(/\\/\\/ !-- Do not remove this line --! \\/\\//,e=>{let n=\"router.all('/',\"+r+\"Controller.getIndex);\\n\"+e;return n}),n.forEach(e=>{o=o.replace(/\\/\\/ !-- Do not remove this line --! \\/\\//,n=>{let t=\"router.all('/\"+e+\"',\"+r+\"Controller.\"+e+\");\\n\"+n;return t})})}(0,r,n),function(e,r,n){y.cd(\"../config\");let t=S.readFileSync(\"routes.js\").toString(),o=r+\"Router\",i=(t=t.replace(/\\/\\/ !-- Do not remove this line --! \\/\\//,e=>{let n=\"app.use('/\"+r+\"',\"+o+\");\\n    \"+e;return n})).match(/require\\(.*\\);/g),s=i[i.length-1];t=t.replace(s,s+\"\\nvar \"+o+\" = require('../routes/\"+r+\"');\"),S.writeFileSync(\"routes.js\",t)}(0,r)}}),S.writeFileSync(routeFileName,content),w.parse(process.argv)},function(e,r){e.exports=require(\"commander\")},function(e,r){e.exports=require(\"shelljs\")},function(e,r){e.exports=require(\"fs\")}]);","extractedComments":[]}